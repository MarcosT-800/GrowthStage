{"ast":null,"code":"var _jsxFileName = \"/workspace/3CDISC---GRAFIC/GrowthStage/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart() {\n  _s();\n  const [baseData, setBaseData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchBaseData() {\n      try {\n        const apiToken = 'd0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq';\n        const response = await axios.get(`https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=1&api_token=d0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq`);\n        const data = response.data.data;\n        const newData = data.map(base => ({\n          name: base.name,\n          start_time: base.start_time,\n          end_time: base.end_time,\n          asr: parseFloat(base.asr)\n        }));\n        setBaseData(newData);\n        const chartData = {\n          series: [{\n            name: 'ASR',\n            data: newData.map(item => item.asr)\n          }],\n          options: {\n            chart: {\n              height: 350,\n              type: 'line'\n            },\n            xaxis: {\n              categories: newData.map(item => item.name)\n            },\n            title: {\n              text: 'ASR Over Bases',\n              align: 'center'\n            }\n          }\n        };\n        setChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    ;\n    fetchBaseData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-3 mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ASR Over Bases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: chartData.options,\n      series: chartData.series,\n      type: \"line\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"v6+rViRKpZDwLwcFVkC7CDpYQ+M=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","jsxDEV","_jsxDEV","LineChart","_s","baseData","setBaseData","chartData","setChartData","loading","setLoading","error","setError","fetchBaseData","apiToken","response","get","data","newData","map","base","name","start_time","end_time","asr","parseFloat","series","item","options","chart","height","type","xaxis","categories","title","text","align","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/workspace/3CDISC---GRAFIC/GrowthStage/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\n\nfunction LineChart() {\n  const [baseData, setBaseData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchBaseData() {\n      try {\n   const apiToken = 'd0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq';\n\n        const response = await axios.get(`https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=1&api_token=d0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq`);\n\n        const data = response.data.data;\n\n        const newData = data.map((base) => ({\n          name: base.name,\n          start_time: base.start_time,\n          end_time: base.end_time,\n          asr: parseFloat(base.asr),\n        }));\n\n        setBaseData(newData);\n\n        const chartData = {\n          series: [\n            { name: 'ASR', data: newData.map((item) => item.asr) },\n          ],\n          options: {\n            chart: {\n              height: 350,\n              type: 'line',\n            },\n            xaxis: {\n              categories: newData.map((item) => item.name),\n            },\n            title: {\n              text: 'ASR Over Bases',\n              align: 'center',\n            },\n          },\n        };\n\n        setChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBaseData();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className='container-fluid mt-3 mb-3'>\n      <h2>ASR Over Bases</h2>\n      <Chart\n        options={chartData.options}\n        series={chartData.series}\n        type='line'\n        height={350}\n      />\n    </div>\n  );\n}\n\nexport default LineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}