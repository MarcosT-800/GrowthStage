{"ast":null,"code":"var _jsxFileName = \"/workspace/3CDISC---GRAFIC/GrowthStage/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart() {\n  _s();\n  const [sData, setSdata] = useState([]);\n  const [asr, setAsr] = useState(0);\n  useEffect(() => {\n    const getChartData = async () => {\n      try {\n        const response = await fetch('https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=1&api_token=d0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq');\n        const data = await response.json();\n        const newData = [];\n        let totalAsr = 0;\n        for (let i = 0; i < data.data.length; i++) {\n          const startTime = data.data[i].start_time;\n          const asrValue = parseFloat(data.data[i].asr);\n          newData.push({\n            x: startTime,\n            y: [asrValue]\n          });\n          totalAsr += asrValue;\n        }\n        setSdata(newData);\n        setAsr(totalAsr.toFixed(2)); // Ajuste conforme necessário\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    getChartData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-3 mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Line Chart - ASR Values Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators-summary\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ASR: \", asr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"line\",\n      width: 1450,\n      height: 550,\n      series: [{\n        name: 'ASR',\n        data: sData.map(item => item.y[0])\n      }],\n      options: {\n        title: {\n          text: \"ASR Values Over Time\"\n        },\n        xaxis: {\n          title: {\n            text: \"Start Time\"\n          },\n          categories: sData.map(item => item.x)\n        },\n        yaxis: {\n          title: {\n            text: \"ASR\"\n          },\n          labels: {\n            formatter: function (value) {\n              return value.toFixed(2);\n            }\n          }\n        },\n        legend: {\n          position: 'top'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"wTgDud7F1esjLlh18DBModJ13Zw=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","LineChart","_s","sData","setSdata","asr","setAsr","getChartData","response","fetch","data","json","newData","totalAsr","i","length","startTime","start_time","asrValue","parseFloat","push","x","y","toFixed","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","width","height","series","name","map","item","options","title","text","xaxis","categories","yaxis","labels","formatter","value","legend","position","_c","$RefreshReg$"],"sources":["/workspace/3CDISC---GRAFIC/GrowthStage/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chart from 'react-apexcharts';\n\nfunction LineChart() {\n  const [sData, setSdata] = useState([]);\n  const [asr, setAsr] = useState(0);\n\n  useEffect(() => {\n    const getChartData = async () => {\n      try {\n        const response = await fetch('https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=1&api_token=d0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq');\n        const data = await response.json();\n\n        const newData = [];\n        let totalAsr = 0;\n\n        for (let i = 0; i < data.data.length; i++) {\n          const startTime = data.data[i].start_time;\n          const asrValue = parseFloat(data.data[i].asr);\n\n          newData.push({\n            x: startTime,\n            y: [asrValue],\n          });\n\n          totalAsr += asrValue;\n        }\n\n        setSdata(newData);\n        setAsr(totalAsr.toFixed(2)); // Ajuste conforme necessário\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    getChartData();\n  }, []);\n\n  return (\n    <div className='container-fluid mt-3 mb-3'>\n      <h2>Line Chart - ASR Values Over Time</h2>\n      <div className=\"indicators-summary\">\n        <p>ASR: {asr}</p>\n        {/* Adicione mais informações se necessário */}\n      </div>\n      <Chart\n        type='line'\n        width={1450}\n        height={550}\n        series={[\n          { name: 'ASR', data: sData.map((item) => item.y[0]) },\n        ]}\n        options={{\n          title: { text: \"ASR Values Over Time\" },\n          xaxis: {\n            title: { text: \"Start Time\" },\n            categories: sData.map((item) => item.x)\n          },\n          yaxis: {\n            title: { text: \"ASR\" },\n            labels: {\n              formatter: function (value) {\n                return value.toFixed(2);\n              }\n            }\n          },\n          legend: {\n            position: 'top'\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LineChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEjCC,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oIAAoI,CAAC;QAClK,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,OAAO,GAAG,EAAE;QAClB,IAAIC,QAAQ,GAAG,CAAC;QAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACA,IAAI,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;UACzC,MAAME,SAAS,GAAGN,IAAI,CAACA,IAAI,CAACI,CAAC,CAAC,CAACG,UAAU;UACzC,MAAMC,QAAQ,GAAGC,UAAU,CAACT,IAAI,CAACA,IAAI,CAACI,CAAC,CAAC,CAACT,GAAG,CAAC;UAE7CO,OAAO,CAACQ,IAAI,CAAC;YACXC,CAAC,EAAEL,SAAS;YACZM,CAAC,EAAE,CAACJ,QAAQ;UACd,CAAC,CAAC;UAEFL,QAAQ,IAAIK,QAAQ;QACtB;QAEAd,QAAQ,CAACQ,OAAO,CAAC;QACjBN,MAAM,CAACO,QAAQ,CAACU,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDjB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAK0B,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxC3B,OAAA;MAAA2B,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1C/B,OAAA;MAAK0B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjC3B,OAAA;QAAA2B,QAAA,GAAG,OAAK,EAACtB,GAAG;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CAAC,eACN/B,OAAA,CAACF,KAAK;MACJkC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE,IAAK;MACZC,MAAM,EAAE,GAAI;MACZC,MAAM,EAAE,CACN;QAAEC,IAAI,EAAE,KAAK;QAAE1B,IAAI,EAAEP,KAAK,CAACkC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAChB,CAAC,CAAC,CAAC,CAAC;MAAE,CAAC,CACrD;MACFiB,OAAO,EAAE;QACPC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAuB,CAAC;QACvCC,KAAK,EAAE;UACLF,KAAK,EAAE;YAAEC,IAAI,EAAE;UAAa,CAAC;UAC7BE,UAAU,EAAExC,KAAK,CAACkC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACjB,CAAC;QACxC,CAAC;QACDuB,KAAK,EAAE;UACLJ,KAAK,EAAE;YAAEC,IAAI,EAAE;UAAM,CAAC;UACtBI,MAAM,EAAE;YACNC,SAAS,EAAE,SAAAA,CAAUC,KAAK,EAAE;cAC1B,OAAOA,KAAK,CAACxB,OAAO,CAAC,CAAC,CAAC;YACzB;UACF;QACF,CAAC;QACDyB,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ;MACF;IAAE;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CAtEQD,SAAS;AAAAiD,EAAA,GAATjD,SAAS;AAwElB,eAAeA,SAAS;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}