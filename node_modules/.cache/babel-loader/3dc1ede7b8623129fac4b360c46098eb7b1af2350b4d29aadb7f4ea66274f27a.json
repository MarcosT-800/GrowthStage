{"ast":null,"code":"var _jsxFileName = \"/workspace/3CDISC---GRAFIC/GrowthStage/src/components/Completion/CompletionRateChart.js\",\n  _s = $RefreshSig$();\n// CompletionRateChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompletionRateChart() {\n  _s();\n  const [completionRateData, setCompletionRateData] = useState([]);\n  const [completionRateChartData, setCompletionRateChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchCompletionRateData() {\n      try {\n        const apiToken = 'd0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq';\n        const response = await axios.get(`https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=1&api_token=${apiToken}`);\n        const data = response.data.data;\n        console.log('API Response Data for Completion Rate:', data);\n        const newCompletionRateData = data.map(campaign => ({\n          name: campaign.name,\n          completion_rate: parseFloat(campaign.should_complete_failed_call)\n        }));\n        console.log('Formatted Completion Rate Data:', newCompletionRateData);\n        setCompletionRateData(newCompletionRateData);\n        const chartData = {\n          series: [{\n            name: 'Completion Rate',\n            data: newCompletionRateData.map(item => item.completion_rate)\n          }],\n          options: {\n            chart: {\n              height: 350,\n              type: 'bar'\n            },\n            xaxis: {\n              categories: newCompletionRateData.map(item => item.name)\n            },\n            title: {\n              text: 'Completion Rate of Campaigns',\n              align: 'center'\n            }\n          }\n        };\n        console.log('Completion Rate Chart Data:', chartData);\n        setCompletionRateChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching completion rate data:', error);\n        setError('Error fetching completion rate data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchCompletionRateData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-3 mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Completion Rate of Campaigns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: completionRateChartData.options,\n      series: completionRateChartData.series,\n      type: \"bar\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(CompletionRateChart, \"m9A2YrcMl/TlLsftIWYCXzW08+A=\");\n_c = CompletionRateChart;\nexport default CompletionRateChart;\nvar _c;\n$RefreshReg$(_c, \"CompletionRateChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","jsxDEV","_jsxDEV","CompletionRateChart","_s","completionRateData","setCompletionRateData","completionRateChartData","setCompletionRateChartData","loading","setLoading","error","setError","fetchCompletionRateData","apiToken","response","get","data","console","log","newCompletionRateData","map","campaign","name","completion_rate","parseFloat","should_complete_failed_call","chartData","series","item","options","chart","height","type","xaxis","categories","title","text","align","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/workspace/3CDISC---GRAFIC/GrowthStage/src/components/Completion/CompletionRateChart.js"],"sourcesContent":["// CompletionRateChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\n\nfunction CompletionRateChart() {\n  const [completionRateData, setCompletionRateData] = useState([]);\n  const [completionRateChartData, setCompletionRateChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchCompletionRateData() {\n      try {\n        const apiToken = 'd0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq';\n\n        const response = await axios.get(`https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=1&api_token=${apiToken}`);\n\n        const data = response.data.data;\n\n        console.log('API Response Data for Completion Rate:', data);\n\n        const newCompletionRateData = data.map((campaign) => ({\n          name: campaign.name,\n          completion_rate: parseFloat(campaign.should_complete_failed_call),\n        }));\n\n        console.log('Formatted Completion Rate Data:', newCompletionRateData);\n\n        setCompletionRateData(newCompletionRateData);\n\n        const chartData = {\n          series: [\n            { name: 'Completion Rate', data: newCompletionRateData.map((item) => item.completion_rate) },\n          ],\n          options: {\n            chart: {\n              height: 350,\n              type: 'bar',\n            },\n            xaxis: {\n              categories: newCompletionRateData.map((item) => item.name),\n            },\n            title: {\n              text: 'Completion Rate of Campaigns',\n              align: 'center',\n            },\n          },\n        };\n\n        console.log('Completion Rate Chart Data:', chartData);\n\n        setCompletionRateChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching completion rate data:', error);\n        setError('Error fetching completion rate data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchCompletionRateData();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className='container-fluid mt-3 mb-3'>\n      <h2>Completion Rate of Campaigns</h2>\n      <Chart\n        options={completionRateChartData.options}\n        series={completionRateChartData.series}\n        type='bar'\n        height={350}\n      />\n    </div>\n  );\n}\n\nexport default CompletionRateChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}