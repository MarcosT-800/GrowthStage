{"ast":null,"code":"var _jsxFileName = \"/workspace/3CDISC---GRAFIC/GrowthStage/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart() {\n  _s();\n  const [sData, setSdata] = useState([]);\n  const [nvdi, setNvdi] = useState(0);\n  const [accumGDD, setAccumGDD] = useState(0);\n  const [accumRainfall, setAccumRainfall] = useState(0);\n  useEffect(() => {\n    const getChartData = async () => {\n      try {\n        const response = await fetch('https://raw.githubusercontent.com/alexanderboliva/test/main/api_example.json');\n        const data = await response.json();\n        const newData = [];\n        let totalNvdi = 0;\n        let totalAccumGDD = 0;\n        let totalAccumRainfall = 0;\n        for (let i = 0; i < data.length; i++) {\n          const date = new Date(data[i].time * 1000);\n          const month = date.toLocaleString('default', {\n            month: 'short'\n          });\n          const degreeDays = data[i].degree_days;\n          const precipitation = data[i].precipitation;\n          const ndvi = data[i].ndvi;\n          if (newData.length === 0 || month !== newData[newData.length - 1].x) {\n            newData.push({\n              x: month,\n              y: [degreeDays, precipitation, ndvi]\n            });\n          }\n          totalNvdi += ndvi;\n          totalAccumGDD += degreeDays;\n          totalAccumRainfall += precipitation;\n        }\n        setSdata(newData);\n        setNvdi(totalNvdi.toFixed(1));\n        setAccumGDD(totalAccumGDD.toFixed(1));\n        setAccumRainfall(totalAccumRainfall.toFixed(1));\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    getChartData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-3 mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Line Chart - Indicators Growth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"NVDI: \", nvdi]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Accumulated GDD: \", accumGDD]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Accumulated Rainfall: \", accumRainfall]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"line\",\n      width: 1450,\n      height: 550,\n      series: [{\n        name: 'Degree Days',\n        data: sData.map(item => item.y[0])\n      }, {\n        name: 'Precipitation',\n        data: sData.map(item => item.y[1])\n      }, {\n        name: 'NDVI',\n        data: sData.map(item => item.y[2])\n      }],\n      options: {\n        title: {\n          text: \"Indicators Growth Over Time\"\n        },\n        xaxis: {\n          title: {\n            text: \"Month\"\n          },\n          categories: sData.map(item => item.x)\n        },\n        yaxis: {\n          title: {\n            text: \"Degrees Celsius\"\n          },\n          labels: {\n            formatter: function (value) {\n              return value.toFixed(1);\n            }\n          }\n        },\n        legend: {\n          position: 'top'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"/zBee9Q7K2mGLmbbcy1lvAmfqGw=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","LineChart","_s","sData","setSdata","nvdi","setNvdi","accumGDD","setAccumGDD","accumRainfall","setAccumRainfall","getChartData","response","fetch","data","json","newData","totalNvdi","totalAccumGDD","totalAccumRainfall","i","length","date","Date","time","month","toLocaleString","degreeDays","degree_days","precipitation","ndvi","x","push","y","toFixed","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","width","height","series","name","map","item","options","title","text","xaxis","categories","yaxis","labels","formatter","value","legend","position","_c","$RefreshReg$"],"sources":["/workspace/3CDISC---GRAFIC/GrowthStage/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Chart from 'react-apexcharts';\n\nfunction LineChart() {\n  const [sData, setSdata] = useState([]);\n  const [nvdi, setNvdi] = useState(0);\n  const [accumGDD, setAccumGDD] = useState(0);\n  const [accumRainfall, setAccumRainfall] = useState(0);\n\n  useEffect(() => {\n    const getChartData = async () => {\n      try {\n        const response = await fetch('https://raw.githubusercontent.com/alexanderboliva/test/main/api_example.json');\n        const data = await response.json();\n        const newData = [];\n\n        let totalNvdi = 0;\n        let totalAccumGDD = 0;\n        let totalAccumRainfall = 0;\n\n        for (let i = 0; i < data.length; i++) {\n          const date = new Date(data[i].time * 1000);\n          const month = date.toLocaleString('default', { month: 'short' });\n          const degreeDays = data[i].degree_days;\n          const precipitation = data[i].precipitation;\n          const ndvi = data[i].ndvi;\n\n          if (newData.length === 0 || month !== newData[newData.length - 1].x) {\n            newData.push({\n              x: month,\n              y: [degreeDays, precipitation, ndvi]\n            });\n          }\n\n          totalNvdi += ndvi;\n          totalAccumGDD += degreeDays;\n          totalAccumRainfall += precipitation;\n        }\n\n        setSdata(newData);\n        setNvdi(totalNvdi.toFixed(1));\n        setAccumGDD(totalAccumGDD.toFixed(1));\n        setAccumRainfall(totalAccumRainfall.toFixed(1));\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    getChartData();\n  }, []);\n\n  return (\n    <div className='container-fluid mt-3 mb-3'>\n      <h2>Line Chart - Indicators Growth</h2>\n      <div className=\"indicators-summary\">\n        <p>NVDI: {nvdi}</p>\n        <p>Accumulated GDD: {accumGDD}</p>\n        <p>Accumulated Rainfall: {accumRainfall}</p>\n      </div>\n      <Chart\n        type='line'\n        width={1450}\n        height={550}\n        series={[\n          { name: 'Degree Days', data: sData.map((item) => item.y[0]) },\n          { name: 'Precipitation', data: sData.map((item) => item.y[1]) },\n          { name: 'NDVI', data: sData.map((item) => item.y[2]) }\n        ]}\n        options={{\n          title: { text: \"Indicators Growth Over Time\" },\n          xaxis: {\n            title: { text: \"Month\" },\n            categories: sData.map((item) => item.x)\n          },\n          yaxis: {\n            title: { text: \"Degrees Celsius\" },\n            labels: {\n              formatter: function (value) {\n                return value.toFixed(1);\n              }\n            }\n          },\n          legend: {\n            position: 'top'\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}